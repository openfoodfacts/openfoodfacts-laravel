name: CI

on:
  push:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [8.1, 8.2]
        laravel: ['9.*', '10.*', '11.*', '12.*']
        dependency-version: [prefer-stable]
        include:
          - laravel: 12.*
            testbench: 10.*
          - laravel: 11.*
            testbench: 9.*
          - laravel: 10.*
            testbench: 8.*
          - laravel: 9.*
            testbench: 7.*
        exclude:
          - laravel: 11.*
            php: 8.1
          - laravel: 12.*
            php: 8.1

    name: Tests - PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }} - ${{ matrix.dependency-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 10

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, xdebug
          coverage: xdebug

      - name: Report PHP version
        run: php -v

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v4.2.0
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

      - name: Check quality code
        env:
          PHP_CS_FIXER_IGNORE_ENV: 1
        run: vendor/bin/php-cs-fixer fix --ansi --dry-run --using-cache=no --verbose

      - name: Execute phpstan
        run: vendor/bin/phpstan

      - name: Execute tests
        run: vendor/bin/phpunit --coverage-clover ./build/coverage.clover

      - name: Uploading code coverage to scrutinize
        uses: sudo-bot/action-scrutinizer@latest
        with:
          cli-args: --format=php-clover build/coverage.clover
